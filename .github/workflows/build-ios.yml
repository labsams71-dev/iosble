name: Build iOS App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Create Xcode Project
      run: |
        # Create a simple Xcode project structure
        mkdir -p BLE_Sniffer.xcodeproj
        cat > BLE_Sniffer.xcodeproj/project.pbxproj << 'EOF'
        // !$*UTF8*$!
        {
        	archiveVersion = 1;
        	classes = {
        	};
        	objectVersion = 56;
        	objects = {
        		/* Begin PBXBuildFile section */
        		1A2B3C4D5E6F7890 /* BLE_SnifferApp.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F7891 /* BLE_SnifferApp.swift */; };
        		1A2B3C4D5E6F7892 /* ContentView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F7893 /* ContentView.swift */; };
        		1A2B3C4D5E6F7894 /* BLEManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F7895 /* BLEManager.swift */; };
        		1A2B3C4D5E6F7896 /* BLEDevice.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F7897 /* BLEDevice.swift */; };
        		1A2B3C4D5E6F7898 /* SniffView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F7899 /* SniffView.swift */; };
        		1A2B3C4D5E6F789A /* LibraryView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F789B /* LibraryView.swift */; };
        		1A2B3C4D5E6F789C /* DeviceDetailView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F789D /* DeviceDetailView.swift */; };
        		1A2B3C4D5E6F789E /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 1A2B3C4D5E6F789F /* Assets.xcassets */; };
        		/* End PBXBuildFile section */
        		
        		/* Begin PBXFileReference section */
        		1A2B3C4D5E6F7890 /* BLE_Sniffer.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = BLE_Sniffer.app; sourceTree = BUILT_PRODUCTS_DIR; };
        		1A2B3C4D5E6F7891 /* BLE_SnifferApp.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BLE_SnifferApp.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F7893 /* ContentView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContentView.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F7895 /* BLEManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BLEManager.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F7897 /* BLEDevice.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BLEDevice.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F7899 /* SniffView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SniffView.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F789B /* LibraryView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LibraryView.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F789D /* DeviceDetailView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeviceDetailView.swift; sourceTree = "<group>"; };
        		1A2B3C4D5E6F789F /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
        		1A2B3C4D5E6F78A0 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
        		/* End PBXFileReference section */
        		
        		/* Begin PBXFrameworksBuildPhase section */
        		1A2B3C4D5E6F788D /* Frameworks */ = {
        			isa = PBXFrameworksBuildPhase;
        			buildActionMask = 2147483647;
        			files = (
        			);
        			runOnlyForDeploymentPostprocessing = 0;
        		};
        		/* End PBXFrameworksBuildPhase section */
        		
        		/* Begin PBXGroup section */
        		1A2B3C4D5E6F7887 = {
        			isa = PBXGroup;
        			children = (
        				1A2B3C4D5E6F7892 /* BLE_Sniffer */,
        				1A2B3C4D5E6F7891 /* Products */,
        			);
        			sourceTree = "<group>";
        		};
        		1A2B3C4D5E6F7891 /* Products */ = {
        			isa = PBXGroup;
        			children = (
        				1A2B3C4D5E6F7890 /* BLE_Sniffer.app */,
        			);
        			name = Products;
        			sourceTree = "<group>";
        		};
        		1A2B3C4D5E6F7892 /* BLE_Sniffer */ = {
        			isa = PBXGroup;
        			children = (
        				1A2B3C4D5E6F7891 /* BLE_SnifferApp.swift */,
        				1A2B3C4D5E6F7893 /* ContentView.swift */,
        				1A2B3C4D5E6F7895 /* BLEManager.swift */,
        				1A2B3C4D5E6F7897 /* BLEDevice.swift */,
        				1A2B3C4D5E6F7899 /* SniffView.swift */,
        				1A2B3C4D5E6F789B /* LibraryView.swift */,
        				1A2B3C4D5E6F789D /* DeviceDetailView.swift */,
        				1A2B3C4D5E6F789F /* Assets.xcassets */,
        				1A2B3C4D5E6F78A0 /* Info.plist */,
        			);
        			path = BLE_Sniffer;
        			sourceTree = "<group>";
        		};
        		/* End PBXGroup section */
        		
        		/* Begin PBXNativeTarget section */
        		1A2B3C4D5E6F788F /* BLE_Sniffer */ = {
        			isa = PBXNativeTarget;
        			buildConfigurationList = 1A2B3C4D5E6F78A3 /* Build configuration list for PBXNativeTarget "BLE_Sniffer" */;
        			buildPhases = (
        				1A2B3C4D5E6F788C /* Sources */,
        				1A2B3C4D5E6F788D /* Frameworks */,
        				1A2B3C4D5E6F788E /* Resources */,
        			);
        			buildRules = (
        			);
        			dependencies = (
        			);
        			name = BLE_Sniffer;
        			productName = BLE_Sniffer;
        			productReference = 1A2B3C4D5E6F7890 /* BLE_Sniffer.app */;
        			productType = "com.apple.product-type.application";
        		};
        		/* End PBXNativeTarget section */
        		
        		/* Begin PBXProject section */
        		1A2B3C4D5E6F7888 /* Project object */ = {
        			isa = PBXProject;
        			attributes = {
        				BuildIndependentTargetsInParallel = 1;
        				LastSwiftUpdateCheck = 1500;
        				LastUpgradeCheck = 1500;
        				TargetAttributes = {
        					1A2B3C4D5E6F788F = {
        						CreatedOnToolsVersion = 15.0;
        					};
        				};
        			};
        			buildConfigurationList = 1A2B3C4D5E6F788B /* Build configuration list for PBXProject "BLE_Sniffer" */;
        			compatibilityVersion = "Xcode 14.0";
        			developmentRegion = en;
        			hasScannedForEncodings = 0;
        			knownRegions = (
        				en,
        				Base,
        			);
        			mainGroup = 1A2B3C4D5E6F7887;
        			productRefGroup = 1A2B3C4D5E6F7891 /* Products */;
        			projectDirPath = "";
        			projectRoot = "";
        			targets = (
        				1A2B3C4D5E6F788F /* BLE_Sniffer */,
        			);
        		};
        		/* End PBXProject section */
        		
        		/* Begin PBXResourcesBuildPhase section */
        		1A2B3C4D5E6F788E /* Resources */ = {
        			isa = PBXResourcesBuildPhase;
        			buildActionMask = 2147483647;
        			files = (
        				1A2B3C4D5E6F789E /* Assets.xcassets in Resources */,
        			);
        			runOnlyForDeploymentPostprocessing = 0;
        		};
        		/* End PBXResourcesBuildPhase section */
        		
        		/* Begin PBXSourcesBuildPhase section */
        		1A2B3C4D5E6F788C /* Sources */ = {
        			isa = PBXSourcesBuildPhase;
        			buildActionMask = 2147483647;
        			files = (
        				1A2B3C4D5E6F7892 /* BLE_SnifferApp.swift in Sources */,
        				1A2B3C4D5E6F7894 /* ContentView.swift in Sources */,
        				1A2B3C4D5E6F7896 /* BLEManager.swift in Sources */,
        				1A2B3C4D5E6F7898 /* BLEDevice.swift in Sources */,
        				1A2B3C4D5E6F789A /* SniffView.swift in Sources */,
        				1A2B3C4D5E6F789C /* LibraryView.swift in Sources */,
        				1A2B3C4D5E6F789E /* DeviceDetailView.swift in Sources */,
        			);
        			runOnlyForDeploymentPostprocessing = 0;
        		};
        		/* End PBXSourcesBuildPhase section */
        		
        		/* Begin XCBuildConfiguration section */
        		1A2B3C4D5E6F78A1 /* Debug */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ALWAYS_SEARCH_USER_PATHS = NO;
        				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
        				CLANG_ANALYZER_NONNULL = YES;
        				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
        				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
        				CLANG_ENABLE_MODULES = YES;
        				CLANG_ENABLE_OBJC_ARC = YES;
        				CLANG_ENABLE_OBJC_WEAK = YES;
        				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
        				CLANG_WARN_BOOL_CONVERSION = YES;
        				CLANG_WARN_COMMA = YES;
        				CLANG_WARN_CONSTANT_CONVERSION = YES;
        				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
        				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
        				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
        				CLANG_WARN_EMPTY_BODY = YES;
        				CLANG_WARN_ENUM_CONVERSION = YES;
        				CLANG_WARN_INFINITE_RECURSION = YES;
        				CLANG_WARN_INT_CONVERSION = YES;
        				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
        				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
        				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
        				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
        				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
        				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
        				CLANG_WARN_STRICT_PROTOTYPES = YES;
        				CLANG_WARN_SUSPICIOUS_MOVE = YES;
        				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
        				CLANG_WARN_UNREACHABLE_CODE = YES;
        				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
        				COPY_PHASE_STRIP = NO;
        				DEBUG_INFORMATION_FORMAT = dwarf;
        				ENABLE_STRICT_OBJC_MSGSEND = YES;
        				ENABLE_TESTABILITY = YES;
        				ENABLE_USER_SCRIPT_SANDBOXING = YES;
        				GCC_C_LANGUAGE_STANDARD = gnu17;
        				GCC_DYNAMIC_NO_PIC = NO;
        				GCC_NO_COMMON_BLOCKS = YES;
        				GCC_OPTIMIZATION_LEVEL = 0;
        				GCC_PREPROCESSOR_DEFINITIONS = (
        					"DEBUG=1",
        					"$(inherited)",
        				);
        				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
        				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
        				GCC_WARN_UNDECLARED_SELECTOR = YES;
        				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
        				GCC_WARN_UNUSED_FUNCTION = YES;
        				GCC_WARN_UNUSED_VARIABLE = YES;
        				IPHONEOS_DEPLOYMENT_TARGET = 16.6;
        				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
        				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
        				MTL_FAST_MATH = YES;
        				ONLY_ACTIVE_ARCH = YES;
        				SDKROOT = iphoneos;
        				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
        				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
        			};
        			name = Debug;
        		};
        		1A2B3C4D5E6F78A2 /* Release */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ALWAYS_SEARCH_USER_PATHS = NO;
        				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
        				CLANG_ANALYZER_NONNULL = YES;
        				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
        				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
        				CLANG_ENABLE_MODULES = YES;
        				CLANG_ENABLE_OBJC_ARC = YES;
        				CLANG_ENABLE_OBJC_WEAK = YES;
        				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
        				CLANG_WARN_BOOL_CONVERSION = YES;
        				CLANG_WARN_COMMA = YES;
        				CLANG_WARN_CONSTANT_CONVERSION = YES;
        				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
        				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
        				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
        				CLANG_WARN_EMPTY_BODY = YES;
        				CLANG_WARN_ENUM_CONVERSION = YES;
        				CLANG_WARN_INFINITE_RECURSION = YES;
        				CLANG_WARN_INT_CONVERSION = YES;
        				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
        				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
        				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
        				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
        				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
        				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
        				CLANG_WARN_STRICT_PROTOTYPES = YES;
        				CLANG_WARN_SUSPICIOUS_MOVE = YES;
        				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
        				CLANG_WARN_UNREACHABLE_CODE = YES;
        				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
        				COPY_PHASE_STRIP = NO;
        				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
        				ENABLE_NS_ASSERTIONS = NO;
        				ENABLE_STRICT_OBJC_MSGSEND = YES;
        				ENABLE_USER_SCRIPT_SANDBOXING = YES;
        				GCC_C_LANGUAGE_STANDARD = gnu17;
        				GCC_NO_COMMON_BLOCKS = YES;
        				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
        				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
        				GCC_WARN_UNDECLARED_SELECTOR = YES;
        				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
        				GCC_WARN_UNUSED_FUNCTION = YES;
        				GCC_WARN_UNUSED_VARIABLE = YES;
        				IPHONEOS_DEPLOYMENT_TARGET = 16.6;
        				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
        				MTL_ENABLE_DEBUG_INFO = NO;
        				MTL_FAST_MATH = YES;
        				SDKROOT = iphoneos;
        				SWIFT_COMPILATION_MODE = wholemodule;
        				VALIDATE_PRODUCT = YES;
        			};
        			name = Release;
        		};
        		1A2B3C4D5E6F78A4 /* Debug */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
        				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
        				CODE_SIGN_STYLE = Manual;
        				CURRENT_PROJECT_VERSION = 1;
        				DEVELOPMENT_TEAM = "";
        				ENABLE_PREVIEWS = YES;
        				GENERATE_INFOPLIST_FILE = NO;
        				INFOPLIST_FILE = BLE_Sniffer/Info.plist;
        				INFOPLIST_KEY_NSBluetoothAlwaysUsageDescription = "This app needs Bluetooth to scan for and connect to BLE devices";
        				INFOPLIST_KEY_NSBluetoothPeripheralUsageDescription = "This app needs Bluetooth to scan for and connect to BLE devices";
        				INFOPLIST_KEY_UIApplicationSceneManifest_Generation = YES;
        				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
        				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				LD_RUNPATH_SEARCH_PATHS = (
        					"$(inherited)",
        					"@executable_path/Frameworks",
        				);
        				MARKETING_VERSION = 1.0;
        				PRODUCT_BUNDLE_IDENTIFIER = com.example.BLE-Sniffer;
        				PRODUCT_NAME = "$(TARGET_NAME)";
        				SWIFT_EMIT_LOC_STRINGS = YES;
        				SWIFT_VERSION = 5.0;
        				TARGETED_DEVICE_FAMILY = "1,2";
        			};
        			name = Debug;
        		};
        		1A2B3C4D5E6F78A5 /* Release */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
        				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
        				CODE_SIGN_STYLE = Manual;
        				CURRENT_PROJECT_VERSION = 1;
        				DEVELOPMENT_TEAM = "";
        				ENABLE_PREVIEWS = YES;
        				GENERATE_INFOPLIST_FILE = NO;
        				INFOPLIST_FILE = BLE_Sniffer/Info.plist;
        				INFOPLIST_KEY_NSBluetoothAlwaysUsageDescription = "This app needs Bluetooth to scan for and connect to BLE devices";
        				INFOPLIST_KEY_NSBluetoothPeripheralUsageDescription = "This app needs Bluetooth to scan for and connect to BLE devices";
        				INFOPLIST_KEY_UIApplicationSceneManifest_Generation = YES;
        				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
        				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				LD_RUNPATH_SEARCH_PATHS = (
        					"$(inherited)",
        					"@executable_path/Frameworks",
        				);
        				MARKETING_VERSION = 1.0;
        				PRODUCT_BUNDLE_IDENTIFIER = com.example.BLE-Sniffer;
        				PRODUCT_NAME = "$(TARGET_NAME)";
        				SWIFT_EMIT_LOC_STRINGS = YES;
        				SWIFT_VERSION = 5.0;
        				TARGETED_DEVICE_FAMILY = "1,2";
        			};
        			name = Release;
        		};
        		/* End XCBuildConfiguration section */
        		
        		/* Begin XCConfigurationList section */
        		1A2B3C4D5E6F788B /* Build configuration list for PBXProject "BLE_Sniffer" */ = {
        			isa = XCConfigurationList;
        			buildConfigurations = (
        				1A2B3C4D5E6F78A1 /* Debug */,
        				1A2B3C4D5E6F78A2 /* Release */,
        			);
        			defaultConfigurationIsVisible = 0;
        			defaultConfigurationName = Release;
        		};
        		1A2B3C4D5E6F78A3 /* Build configuration list for PBXNativeTarget "BLE_Sniffer" */ = {
        			isa = XCConfigurationList;
        			buildConfigurations = (
        				1A2B3C4D5E6F78A4 /* Debug */,
        				1A2B3C4D5E6F78A5 /* Release */,
        			);
        			defaultConfigurationIsVisible = 0;
        			defaultConfigurationName = Release;
        		};
        		/* End XCConfigurationList section */
        	};
        	rootObject = 1A2B3C4D5E6F7888 /* Project object */;
        EOF
        
    - name: Create Info.plist
      run: |
        cat > BLE_Sniffer/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
        	<key>CFBundleDevelopmentRegion</key>
        	<string>$(DEVELOPMENT_LANGUAGE)</string>
        	<key>CFBundleExecutable</key>
        	<string>$(EXECUTABLE_NAME)</string>
        	<key>CFBundleIdentifier</key>
        	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
        	<key>CFBundleInfoDictionaryVersion</key>
        	<string>6.0</string>
        	<key>CFBundleName</key>
        	<string>$(PRODUCT_NAME)</string>
        	<key>CFBundlePackageType</key>
        	<string>APPL</string>
        	<key>CFBundleShortVersionString</key>
        	<string>1.0</string>
        	<key>CFBundleVersion</key>
        	<string>1</string>
        	<key>LSRequiresIPhoneOS</key>
        	<true/>
        	<key>NSBluetoothAlwaysUsageDescription</key>
        	<string>This app needs Bluetooth to scan for and connect to BLE devices</string>
        	<key>NSBluetoothPeripheralUsageDescription</key>
        	<string>This app needs Bluetooth to scan for and connect to BLE devices</string>
        	<key>UIApplicationSceneManifest</key>
        	<dict>
        		<key>UIApplicationSupportsMultipleScenes</key>
        		<false/>
        		<key>UISceneConfigurations</key>
        		<dict>
        			<key>UIWindowSceneSessionRoleApplication</key>
        			<dict>
        				<key>UISceneConfigurationName</key>
        				<string>Default Configuration</string>
        				<key>UISceneDelegateClassName</key>
        				<string>$(PRODUCT_MODULE_NAME).SceneDelegate</string>
        			</dict>
        		</dict>
        	</dict>
        	<key>UIApplicationSupportsIndirectInputEvents</key>
        	<true/>
        	<key>UILaunchScreen</key>
        	<dict/>
        	<key>UISupportedInterfaceOrientations</key>
        	<array>
        		<string>UIInterfaceOrientationPortrait</string>
        		<string>UIInterfaceOrientationLandscapeLeft</string>
        		<string>UIInterfaceOrientationLandscapeRight</string>
        	</array>
        	<key>UISupportedInterfaceOrientations~ipad</key>
        	<array>
        		<string>UIInterfaceOrientationPortrait</string>
        		<string>UIInterfaceOrientationPortraitUpsideDown</string>
        		<string>UIInterfaceOrientationLandscapeLeft</string>
        		<string>UIInterfaceOrientationLandscapeRight</string>
        	</array>
        </dict>
        </plist>
        EOF
        
    - name: Build iOS App
      run: |
        xcodebuild -project BLE_Sniffer.xcodeproj -scheme BLE_Sniffer -configuration Release -destination generic/platform=iOS -archivePath BLE_Sniffer.xcarchive archive
        
    - name: Export IPA
      run: |
        xcodebuild -exportArchive -archivePath BLE_Sniffer.xcarchive -exportPath . -exportOptionsPlist <(cat << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
        	<key>method</key>
        	<string>development</string>
        	<key>signingStyle</key>
        	<string>manual</string>
        	<key>teamID</key>
        	<string></string>
        	<key>stripSwiftSymbols</key>
        	<true/>
        	<key>uploadBitcode</key>
        	<false/>
        	<key>uploadSymbols</key>
        	<false/>
        </dict>
        </plist>
        EOF
        )
        
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: BLE_Sniffer-IPA
        path: BLE_Sniffer.ipa
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          🚀 BLE Sniffer iOS App - Automatic Build
          
          ## What's New
          - Real BLE functionality (no simulations)
          - Dark Mode enabled
          - English interface
          - TrollStore ready
          
          ## Installation
          1. Download the IPA file
          2. Install via TrollStore
          3. Grant Bluetooth permissions
          4. Start scanning!
          
          ## Features
          - Scan nearby BLE devices
          - Save devices to library
          - Broadcast real BLE signals
          - Configure transmission parameters
          
          Built automatically on ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./BLE_Sniffer.ipa
        asset_name: BLE_Sniffer.ipa
        asset_content_type: application/octet-stream 
